# Code generated by font_to_py.py.
# Font: Charging.ttf
# Cmd: ./font_to_py.py -s 51 -l 57 -x ../Charging.ttf 14 charging_14.py
version = '0.33'

def height():
    return 14

def baseline():
    return 14

def max_width():
    return 18

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 51

def max_ch():
    return 57

_font =\
b'\x12\x00\x00\x00\x00\x00\x00\x00\x7c\x00\x00\x44\x00\x00\x44\x00'\
b'\x00\x44\x00\x00\x44\x00\x00\x44\x00\x00\x44\x00\x00\x44\x00\x00'\
b'\x44\x00\x00\x44\x00\x00\x44\x00\x00\x7c\x00\x00\x0d\x00\x70\x00'\
b'\x58\x00\xc9\xe0\xca\x10\x72\x10\x02\x00\x06\x00\x02\x00\x02\x10'\
b'\x02\x10\x01\xe0\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00'\
b'\x20\x00\x00\x20\x00\x1f\xdf\x00\x1f\xbf\x00\x7f\x3f\x00\x7f\x07'\
b'\x00\x7e\x0f\x00\x7e\x0f\x00\x7f\xdf\x00\x1f\xbf\x00\x00\x40\x00'\
b'\x00\x80\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x1f\xff\x00\x10\x01\x00\x70\x01\x00\x70\x01\x00\x70\x01\x00'\
b'\x70\x01\x00\x70\x01\x00\x1f\xff\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f\xff\x00'\
b'\x10\x0f\x00\x70\x0f\x00\x70\x0f\x00\x70\x0f\x00\x70\x0f\x00\x70'\
b'\x0f\x00\x1f\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x12\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f\xff\x00\x10\x3f\x00\x70'\
b'\x3f\x00\x70\x3f\x00\x70\x3f\x00\x70\x3f\x00\x70\x3f\x00\x1f\xff'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x1f\xff\x00\x11\xff\x00\x71\xff\x00\x71\xff'\
b'\x00\x71\xff\x00\x71\xff\x00\x71\xff\x00\x1f\xff\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x1f\xff\x00\x1f\xff\x00\x7f\xff\x00\x7f\xff\x00\x7f\xff\x00'\
b'\x7f\xff\x00\x7f\xff\x00\x1f\xff\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00'

_index =\
b'\x00\x00\x2c\x00\x4a\x00\x76\x00\xa2\x00\xce\x00\xfa\x00\x26\x01'\
b'\x52\x01'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)

def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - 51 + 1) if oc >= 51 and oc <= 57 else 0
    doff = ifb(_mvi[ioff : ])
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 14
    return _mvfont[doff + 2:next_offs], 14, width
 
