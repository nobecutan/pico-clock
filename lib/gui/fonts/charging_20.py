# Code generated by font_to_py.py.
# Font: Charging.ttf
# Cmd: ./font_to_py.py -s 51 -l 57 -x ../Charging.ttf 20 charging_20.py
version = '0.33'

def height():
    return 20

def baseline():
    return 20

def max_width():
    return 30

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 51

def max_ch():
    return 57

_font =\
b'\x1e\x00\x7f\x80\x00\x00\x40\x80\x00\x00\x40\x80\x00\x00\x40\x80'\
b'\x00\x00\x40\x80\x00\x00\x40\x80\x00\x00\x40\x80\x00\x00\x40\x80'\
b'\x00\x00\x40\x80\x00\x00\x40\x80\x00\x00\x40\x80\x00\x00\x40\x80'\
b'\x00\x00\x40\x80\x00\x00\x40\x80\x00\x00\x40\x80\x00\x00\x40\x80'\
b'\x00\x00\x40\x80\x00\x00\x40\x80\x00\x00\x40\x80\x00\x00\x7f\x80'\
b'\x00\x00\x14\x00\x08\x00\x00\x3e\x00\x00\x63\x00\x00\x41\x80\x00'\
b'\xc1\x80\x00\xc1\x80\x00\x63\x00\x00\x3f\x00\x00\x1c\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xe0\x0f\xff'\
b'\xff\xe0\x0c\x1e\xf7\xe0\x3c\x1e\xb7\xe0\x3c\x1e\x77\xe0\x3c\x1e'\
b'\xf7\xe0\x3c\x1c\x17\xe0\x3c\x18\x37\xe0\x3c\x1e\x77\xe0\x3c\x1e'\
b'\xf7\xe0\x3c\x1c\xf7\xe0\x0c\x1e\xf7\xe0\x0f\xff\xff\xe0\x0f\xff'\
b'\xff\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xe0'\
b'\x0f\xff\xff\xe0\x0c\x00\x00\x60\x3c\x00\x00\x60\x3c\x00\x00\x60'\
b'\x3c\x00\x00\x60\x3c\x00\x00\x60\x3c\x00\x00\x60\x3c\x00\x00\x60'\
b'\x3c\x00\x00\x60\x3c\x00\x00\x60\x0c\x00\x00\x60\x0f\xff\xff\xe0'\
b'\x0f\xff\xff\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xff'\
b'\xff\xe0\x0f\xff\xff\xe0\x0c\x00\x00\x60\x3c\x00\x07\xe0\x3c\x00'\
b'\x07\xe0\x3c\x00\x07\xe0\x3c\x00\x07\xe0\x3c\x00\x07\xe0\x3c\x00'\
b'\x07\xe0\x3c\x00\x07\xe0\x3c\x00\x07\xe0\x0c\x00\x00\x60\x0f\xff'\
b'\xff\xe0\x0f\xff\xff\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x0f\xff\xff\xe0\x0f\xff\xff\xe0\x0c\x00\x00\x60\x3c\x00\xf7\xe0'\
b'\x3c\x00\xf7\xe0\x3c\x00\xf7\xe0\x3c\x00\xf7\xe0\x3c\x00\xf7\xe0'\
b'\x3c\x00\xf7\xe0\x3c\x00\xf7\xe0\x3c\x00\xf7\xe0\x0c\x00\x00\x60'\
b'\x0f\xff\xff\xe0\x0f\xff\xff\xe0\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x0f\xff\xff\xe0\x0f\xff\xff\xe0\x0c\x00\x00\x60\x3c\x1e'\
b'\xf7\xe0\x3c\x1e\xf7\xe0\x3c\x1e\xf7\xe0\x3c\x1e\xf7\xe0\x3c\x1e'\
b'\xf7\xe0\x3c\x1e\xf7\xe0\x3c\x1e\xf7\xe0\x3c\x1e\xf7\xe0\x0c\x00'\
b'\x00\x60\x0f\xff\xff\xe0\x0f\xff\xff\xe0\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1e\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x0f\xff\xff\xe0\x0f\xff\xff\xe0\x0c\x00\x00\x60'\
b'\x3d\xfe\xf7\xe0\x3d\xfe\xf7\xe0\x3d\xfe\xf7\xe0\x3d\xfe\xf7\xe0'\
b'\x3d\xfe\xf7\xe0\x3d\xfe\xf7\xe0\x3d\xfe\xf7\xe0\x3d\xfe\xf7\xe0'\
b'\x0c\x00\x00\x60\x0f\xff\xff\xe0\x0f\xff\xff\xe0\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'

_index =\
b'\x00\x00\x52\x00\x90\x00\xe2\x00\x34\x01\x86\x01\xd8\x01\x2a\x02'\
b'\x7c\x02'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)

def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - 51 + 1) if oc >= 51 and oc <= 57 else 0
    doff = ifb(_mvi[ioff : ])
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 20
    return _mvfont[doff + 2:next_offs], 20, width
 
